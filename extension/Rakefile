require 'rubygems'
require 'highline/import'
require 'rake/clean'

SDK_HOME = '/Users/mnem/Development/sdks/flash/AIRSDK_3-6'
COMPC = "\"#{SDK_HOME}/bin/acompc\""
ADT = "\"#{SDK_HOME}/bin/adt\""

ENV['AIR_SDK_HOME'] = SDK_HOME
ENV['FLEX_SDK_HOME'] = SDK_HOME

def get_storepass()
	password = %x{cat ../certificates/.ios-password}.strip
	if $?.exitstatus != 0 then
		password = ask("Self signing key password: ") {|q| q.echo = '*'}
	end

	return password
end

############################################################################
# Default
directory "build/default"

desc 'Builds the default ActionScript fallback version of the extension'
task :compile_default_library => "build/default" do
	sh "#{COMPC} +configname=airmobile -load-config+=default/build.config -output build/default/default.swc"
end

desc 'Prepares the default ActionScript fallback version of the extension'
task :prepare_default_library => :compile_default_library do
	# Take the library.swf out of the swc
	sh "unzip -o build/default/default.swc library.swf -d build/default"
end

############################################################################
# iOS
$build_type = "Release"

directory "build/ios"

desc 'Builds the release version of the native library for ios'
task :compile_ios_library do
  sh "xcodebuild -project native/ios/NAH_B2D/NaHBox2D.xcodeproj clean"
  sh "xcodebuild -project native/ios/NAH_B2D/NaHBox2D.xcodeproj -target NaHBox2D -configuration #{$build_type}"
end

desc 'Builds and copies the version of the native library for ios to the build directory'
task :prepare_ios_library => ["build/ios", :compile_ios_library, :compile_api] do
	cp "native/ios/NAH_B2D/build/#{$build_type}-iphoneos/libNaHBox2D.a", "build/ios"

	# Take the library.swf from the main API swc
	sh "unzip -o build/NaHBox2DAPI.swc library.swf -d build/ios"
end

############################################################################
# Android
directory "build/android"

desc 'Builds the release version of the native library for android'
task :compile_android_library do
  sh "ndk-build -C native/android clean"
  sh "ndk-build -C native/android"
end

desc 'Builds and copies the version of the native library for ios to the build directory'
task :prepare_android_library => ["build/android", :compile_android_library, :compile_api] do
	cp "native/android/libs/armeabi/libNaHBox2D.so", "build/android"

	# Take the library.swf from the main API swc
	sh "unzip -o build/NaHBox2DAPI.swc library.swf -d build/android"
end

############################################################################
# Extension

directory "build"

CLEAN.add "build"

desc 'Builds the ActionScript API for the extension'
task :compile_api => "build" do
	`#{COMPC} +configname=airmobile -load-config+=ane/build.config -output build/NaHBox2DAPI.swc`
end

desc 'Packages the extension'
#task :package_extension => [:prepare_android_library] do
task :package_extension => [:prepare_ios_library, :prepare_android_library, :prepare_default_library] do
	targets = {
		#"default" => "-C build/default library.swf",
		"iPhone-ARM" => "-C build/ios library.swf libNaHBox2D.a",
		"Android-ARM" => "-C build/android library.swf libNaHBox2D.so"
	}
	command = "#{ADT} -package"
	air_signing = "" #"-storetype pkcs12 -keystore ../certificates/ios.p12 -storepass \"#{get_storepass}\""
	extension_package = "-target ane build/NaHBox2D.ane ane/extension.xml -swc build/NaHBox2DAPI.swc"
	platforms = ''
	targets.map { |plat, options| platforms = platforms + " -platform #{plat} #{options} " }

	sh "#{command} #{air_signing} #{extension_package} #{platforms}"
end

task :default => [ :package_extension ]
